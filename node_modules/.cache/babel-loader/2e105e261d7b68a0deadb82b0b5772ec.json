{"ast":null,"code":"var _jsxFileName = \"/home/ahmadqayyum/Desktop/input-component/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nimport IncomeTransaction from '../component/IncomeTransaction';\nimport ExpenseTransaction from '../component/ExpenseTransaction';\nconst initialState = {\n  incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\n  expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || []\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorag.setItem(\"incomeTransactions\", JSON.stringify(state.incomeTransactions));\n    localStorage.setItem(\"expenseTransactions\", JSON.stringify(state.expenseTransactions));\n  });\n\n  const addIncome = IncomeTransaction => {\n    dispatch({\n      type: 'ADD-INCOME',\n      payload: IncomeTransaction\n    });\n  };\n\n  const addExpense = ExpenseTransaction => {\n    dispatch({\n      type: 'ADD-EXPENSE',\n      payload: ExpenseTransaction\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE-TRANSACTION',\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      incomeTransactions: state.incomeTransactions,\n      expenseTransactions: state.expenseTransactions,\n      addIncome,\n      addExpense,\n      deleteTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/ahmadqayyum/Desktop/input-component/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","IncomeTransaction","ExpenseTransaction","initialState","incomeTransactions","JSON","parse","localStorage","getItem","expenseTransactions","GlobalContext","GlobalContextProvider","children","state","dispatch","localStorag","setItem","stringify","addIncome","type","payload","addExpense","deleteTransaction","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,kBAAkB,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAX,KAA0D,EAD7D;AAEjBC,EAAAA,mBAAmB,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,KAA2D;AAF/D,CAArB;AAKA,OAAO,MAAME,aAAa,GAAGb,aAAa,CAACM,YAAD,CAAnC;AAEP,OAAO,MAAMQ,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,UAAD,EAAaG,YAAb,CAApC;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,WAAW,CAACC,OAAZ,CAAoB,oBAApB,EAAyCX,IAAI,CAACY,SAAL,CAAeJ,KAAK,CAACT,kBAArB,CAAzC;AACAG,IAAAA,YAAY,CAACS,OAAb,CAAqB,qBAArB,EAA2CX,IAAI,CAACY,SAAL,CAAeJ,KAAK,CAACJ,mBAArB,CAA3C;AACH,GAHQ,CAAT;;AAOA,QAAMS,SAAS,GAAGjB,iBAAiB,IAAI;AACnCa,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAEnB;AAFJ,KAAD,CAAR;AAKH,GAND;;AAOA,QAAMoB,UAAU,GAAGnB,kBAAkB,IAAI;AACrCY,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAElB;AAFJ,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMoB,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BT,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BnB,MAAAA,kBAAkB,EAAES,KAAK,CAACT,kBADC;AAE3BK,MAAAA,mBAAmB,EAAEI,KAAK,CAACJ,mBAFA;AAG3BS,MAAAA,SAH2B;AAI3BG,MAAAA,UAJ2B;AAK3BC,MAAAA;AAL2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKV,QAPL,CADJ;AAYH,CA3CM","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react'\nimport AppReducer from './AppReducer'\nimport IncomeTransaction from '../component/IncomeTransaction';\nimport ExpenseTransaction from '../component/ExpenseTransaction';\n\nconst initialState = {\n    incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\n    expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || []\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    \n    \n    useEffect(() => {\n        localStorag.setItem(\"incomeTransactions\",JSON.stringify(state.incomeTransactions))\n        localStorage.setItem(\"expenseTransactions\",JSON.stringify(state.expenseTransactions))\n    })\n\n\n\n    const addIncome = IncomeTransaction => {\n        dispatch({\n            type: 'ADD-INCOME',\n            payload: IncomeTransaction\n        })\n\n    }\n    const addExpense = ExpenseTransaction => {\n        dispatch({\n            type: 'ADD-EXPENSE',\n            payload: ExpenseTransaction,\n        })\n    }\n    const deleteTransaction = (id) => {\n        dispatch({\n            type: 'DELETE-TRANSACTION',\n            payload: id,\n        })\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            incomeTransactions: state.incomeTransactions,\n            expenseTransactions: state.expenseTransactions,\n            addIncome,\n            addExpense,\n            deleteTransaction,\n        }}>\n            {children}\n\n        </GlobalContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}