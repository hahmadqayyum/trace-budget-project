{"ast":null,"code":"var _jsxFileName = \"/home/ahmadqayyum/Desktop/input-component/projectname/src/App.js\";\nimport React from 'react';\n/*\nfunction SearchResult(props) {\n  return <p>Search term: {props.searchTerm}</p>;\n}\n*/\n\nclass SearchResult extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"Search term: \", this.props.searchTerm);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.search;\n  }\n\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this);\n    this.handleSearchTermSubmit = this.handleSearchTermSubmit.bind(this);\n  }\n\n  handleSearchTermChange(event) {\n    this.props.onSearchTermChange(event.target.value);\n  }\n\n  handleSearchTermSubmit(event) {\n    event.preventDefault(); // Is this the best way to get the textbox value?\n    // this.props.onSearchTermSubmit(event.target[0].value);\n    // Using refs:\n    // this.props.onSearchTermSubmit(this.textInput.value);\n\n    this.props.onSearchTermSubmit();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"SearchBar\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSearchTermSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearchTermChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Random (doesn't do anything)\")));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      search: false\n    };\n    this.handleSearchTermSubmit = this.handleSearchTermSubmit.bind(this);\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this);\n  }\n\n  handleSearchTermChange(searchTerm) {\n    this.setState({\n      searchTerm,\n      search: false\n    });\n  }\n\n  handleSearchTermSubmit() {\n    this.setState({\n      search: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchTerm: this.state.searchTerm,\n      onSearchTermChange: this.handleSearchTermChange,\n      onSearchTermSubmit: this.handleSearchTermSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SearchResult, {\n      searchTerm: this.state.searchTerm,\n      search: this.state.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/ahmadqayyum/Desktop/input-component/projectname/src/App.js"],"names":["React","SearchResult","Component","render","props","searchTerm","shouldComponentUpdate","nextProps","search","SearchBar","constructor","handleSearchTermChange","bind","handleSearchTermSubmit","event","onSearchTermChange","target","value","preventDefault","onSearchTermSubmit","App","state","setState"],"mappings":"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","sourcesContent":["import React from 'react';\n/*\nfunction SearchResult(props) {\n  return <p>Search term: {props.searchTerm}</p>;\n}\n*/\n\nclass SearchResult extends React.Component {\n  render() {\n    return <p>Search term: {this.props.searchTerm}</p>;\n  }\n  \n  shouldComponentUpdate(nextProps) {\n    return nextProps.search;\n  }\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this);\n    this.handleSearchTermSubmit = this.handleSearchTermSubmit.bind(this);\n  }\n\n  handleSearchTermChange(event) {\n    this.props.onSearchTermChange(event.target.value);\n  }\n  \n  handleSearchTermSubmit(event) {\n    event.preventDefault();\n    // Is this the best way to get the textbox value?\n    // this.props.onSearchTermSubmit(event.target[0].value);\n    \n    // Using refs:\n    // this.props.onSearchTermSubmit(this.textInput.value);\n    \n    this.props.onSearchTermSubmit();\n  }\n  \n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <h1>SearchBar</h1>\n        <form onSubmit={this.handleSearchTermSubmit}>\n          {/* <input type=\"text\" /> */}\n          {/* <input type=\"text\" ref={(input) => this.textInput = input} /> */}\n          <input type=\"text\" onChange={this.handleSearchTermChange} />\n          <button>Search</button>\n          <button type=\"button\">Random (doesn't do anything)</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchTerm: '', search: false};\n    this.handleSearchTermSubmit = this.handleSearchTermSubmit.bind(this);\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this);\n  }\n  \n  handleSearchTermChange(searchTerm) {\n    this.setState({searchTerm, search: false});\n  }\n  \n  handleSearchTermSubmit() {\n    this.setState({search: true});\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        {/* <SearchBar onSearchTermSubmit={this.handleSearchTermSubmit} /> */}\n        <SearchBar\n          searchTerm={this.state.searchTerm}\n          onSearchTermChange={this.handleSearchTermChange}\n          onSearchTermSubmit={this.handleSearchTermSubmit} />\n        {/* <SearchResult searchTerm={this.state.searchTerm}  /> */}\n        <SearchResult searchTerm={this.state.searchTerm} search={this.state.search} />\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}